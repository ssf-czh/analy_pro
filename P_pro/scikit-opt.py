'''
min f(x1, x2, x3) = x1^2 + x2^2 + x3^2
s.t.
    x1*x2 >= 1
    x1*x2 <= 5
    x2 + x3 = 1
    0 <= x1, x2, x3 <= 5
'''
from sko.DE import DE

def obj_func(p):
    B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B18, B19, B20, B21, B22, B23 = 7.94539444e+01, 8.52049211e+06, -5.42344834e+01, 8.59864857e-02, 6.95046641e-06, 2.23510625e+00, 8.22659631e+01, -8.59345634e+01, -1.41233523e+01, -4.56373684e+00, -8.52048947e+06, 5.03213748e+01, -2.95697716e+01, -1.07953074e+02, 7.07085892e+01, 2.93456023e+01, 5.75888681e+01, 8.52048827e+06, -8.52053335e+06, -2.16722512e+00, 2.90316804e+01, -8.59289244e+01, 7.07100121e+01, -1.71110243e-01
    A0, A1, A2 = 1.05105606e+02, -6.08574731e-01, 1.03989940e-03
    C0, C1, C2 = -5.40003853e+01, 2.96859204e-01, -2.09088412e-04

    Q = 281.4


    T1, T2, T3, T4 = p
    P1 = B0 + B1 * T1 + B2 * T2 + B3 * Q + B4 * Q * Q + B5 * T1 * T1 + B6 * T2 * T2 + B7 * Q * T1 + B8 * Q * T2 + B9 * T1 * T2 + B10 * T3 + B11 * T4 + B12 * T3 * T3 + B13 * T4 * T4 + B14 * Q * T3 + B15 * Q * T4 + B16 * T3 * T4 + B17 * (
                T2 - T1) + B18 * (T4 - T3) + B19 * (T2 - T1) * (T2 - T1) + B20 * (T4 - T3) * (T4 - T3) + B21 * Q * (
                     T2 - T1) + B22 * Q * (T4 - T3) + B23 * (T2 - T1) * (T4 - T3)

    G2 = Q / (4.2 * (T2 - T1) * 1000)
    P2 = A0 + A1 * G2 + A2 * G2 * G2

    G3 = (Q + P1) / (4.2 * (T4 - T3) * 1000)
    P3 = C0 + C1 * G3 + C2 * G3 * G3

    P4 = 69.8978 * (P1 + Q) / (T4 - T3) * (P1 + Q) / (T4 - T3) + 83.7279 * (P1 + Q) / (T4 - T3) + 0.1554

    P = P1+P2+P3+P4

    return P


constraint_eq = [

]

constraint_ueq = [
    lambda x: 4 + x[0] - x[1],
    lambda x: x[1] - x[0] - 10,
    lambda x: x[2] - x[3] + 4,
    lambda x: x[3] - x[2] -6
]



de = DE(func=obj_func, n_dim=4, size_pop=200, max_iter=1000, lb=[6, 10, 21, 25], ub=[10, 20, 33, 39])

best_x, best_y = de.run()
print('best_x:', best_x, '\n', 'best_y:', best_y)